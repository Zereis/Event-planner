import { useState } from "react";
import AddTask from "./addtask";
import RepeatPrompt from "./RepeatPrompt";

export default function ToggleableAddTask({ onAdd }) {
  const [isAdding, setIsAdding] = useState(false);
  const [tempTask, setTempTask] = useState(null);

  // This callback is passed to AddTask and receives the initially created task.
  const handleConfirm = (taskData) => {
    setTempTask(taskData); // Store task for further repeat prompting
  };

  // This callback receives an array of tasks generated by the RepeatPrompt.
  const handleAddConfirmed = (finalTasks) => {
    finalTasks.forEach((t) => onAdd(t)); // Add each task to the global state in App.jsx
    setIsAdding(false);
    setTempTask(null);
  };

  const handleCancel = () => {
    setIsAdding(false);
    setTempTask(null);
  };

  return (
    <div>
      {!isAdding && (
        <button onClick={() => setIsAdding(true)}>➕ Add Task</button>
      )}

      {isAdding && !tempTask && (
        <div>
          <AddTask onTempSubmit={handleConfirm} />
          <button onClick={handleCancel}>❌ Cancel</button>
        </div>
      )}

      {tempTask && (
        <div>
          <RepeatPrompt
            task={tempTask}
            onConfirm={handleAddConfirmed}
            onCancel={handleCancel}
          />
        </div>
      )}
    </div>
  );
}
